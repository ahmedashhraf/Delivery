package org.jcodec.codecs.aac.blocks;

import androidx.core.app.C0753l;
import androidx.core.p034l.C0986h;
import androidx.core.p034l.C1056z;
import androidx.fragment.app.C1406n;
import androidx.recyclerview.widget.C1744m.C1750f;
import com.facebook.imagepipeline.memory.BitmapCounterConfig;
import com.facebook.internal.FacebookRequestErrorClassification;
import com.google.zxing.p350z.C9161a;
import com.instabug.library.p397ui.custom.MaterialMenuDrawable;
import com.mrsool.p423v.C11718b;
import com.mrsool.utils.C11644i;
import com.theartofdev.edmodo.cropper.CropImage;
import org.apache.http.C15470v;
import org.jcodec.codecs.mjpeg.JpegConst;
import org.jcodec.containers.mps.MPSUtils;
import p205i.p471b.p472a.p473a.p474c.p475i.C13959t;
import p205i.p471b.p472a.p473a.p474c.p478j.p480c.p483f.C14020f;
import p212io.fabric.sdk.android.p493p.p498e.C14330v;

public class AACTab {
    static int[] bits1 = {11, 9, 11, 10, 7, 10, 11, 9, 11, 10, 7, 10, 7, 5, 7, 9, 7, 10, 11, 9, 11, 9, 7, 9, 11, 9, 11, 9, 7, 9, 7, 5, 7, 9, 7, 9, 7, 5, 7, 5, 1, 5, 7, 5, 7, 9, 7, 9, 7, 5, 7, 9, 7, 9, 11, 9, 11, 9, 7, 9, 11, 9, 11, 10, 7, 9, 7, 5, 7, 9, 7, 10, 11, 9, 11, 10, 7, 9, 11, 9, 11};
    static int[] bits10;
    static int[] bits11 = {4, 5, 6, 7, 8, 8, 9, 10, 10, 10, 11, 11, 12, 11, 12, 12, 10, 5, 4, 5, 6, 7, 7, 8, 8, 9, 9, 9, 10, 10, 10, 10, 11, 8, 6, 5, 5, 6, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 8, 7, 6, 6, 6, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 8, 8, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 8, 8, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 8, 9, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10, 8, 9, 8, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10, 10, 8, 10, 9, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 8, 10, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 8, 11, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 10, 11, 11, 8, 11, 10, 9, 9, 10, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 8, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 9, 11, 10, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 9, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 9, 12, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 5};
    static int[] bits2 = {9, 7, 9, 8, 6, 8, 9, 8, 9, 8, 6, 7, 6, 5, 6, 7, 6, 8, 9, 7, 8, 8, 6, 8, 9, 7, 9, 8, 6, 7, 6, 5, 6, 7, 6, 8, 6, 5, 6, 5, 3, 5, 6, 5, 6, 8, 6, 7, 6, 5, 6, 8, 6, 8, 9, 7, 9, 8, 6, 8, 8, 7, 9, 8, 6, 7, 6, 4, 6, 8, 6, 7, 9, 7, 9, 7, 6, 8, 9, 7, 9};
    static int[] bits3 = {1, 4, 8, 4, 5, 8, 9, 9, 10, 4, 6, 9, 6, 6, 9, 9, 9, 10, 9, 10, 13, 9, 9, 11, 11, 10, 12, 4, 6, 10, 6, 7, 10, 10, 10, 12, 5, 7, 11, 6, 7, 10, 9, 9, 11, 9, 10, 13, 8, 9, 12, 10, 11, 12, 8, 10, 15, 9, 11, 15, 13, 14, 16, 8, 10, 14, 9, 10, 14, 12, 12, 15, 11, 12, 16, 10, 11, 15, 12, 12, 15};
    static int[] bits4 = {4, 5, 8, 5, 4, 8, 9, 8, 11, 5, 5, 8, 5, 4, 8, 8, 7, 10, 9, 8, 11, 8, 8, 10, 11, 10, 11, 4, 5, 8, 4, 4, 8, 8, 8, 10, 4, 4, 8, 4, 4, 7, 8, 7, 9, 8, 8, 10, 7, 7, 9, 10, 9, 10, 8, 8, 11, 8, 7, 10, 11, 10, 12, 8, 7, 10, 7, 7, 9, 10, 9, 11, 11, 10, 12, 10, 9, 11, 11, 10, 11};
    static int[] bits5 = {13, 12, 11, 11, 10, 11, 11, 12, 13, 12, 11, 10, 9, 8, 9, 10, 11, 12, 12, 10, 9, 8, 7, 8, 9, 10, 11, 11, 9, 8, 5, 4, 5, 8, 9, 11, 10, 8, 7, 4, 1, 4, 7, 8, 11, 11, 9, 8, 5, 4, 5, 8, 9, 11, 11, 10, 9, 8, 7, 8, 9, 10, 11, 12, 11, 10, 9, 8, 9, 10, 11, 12, 13, 12, 12, 11, 10, 10, 11, 12, 13};
    static int[] bits6 = {11, 10, 9, 9, 9, 9, 9, 10, 11, 10, 9, 8, 7, 7, 7, 8, 9, 10, 9, 8, 6, 6, 6, 6, 6, 8, 9, 9, 7, 6, 4, 4, 4, 6, 7, 9, 9, 7, 6, 4, 4, 4, 6, 7, 9, 9, 7, 6, 4, 4, 4, 6, 7, 9, 9, 8, 6, 6, 6, 6, 6, 8, 9, 10, 9, 8, 7, 7, 7, 7, 8, 10, 11, 10, 9, 9, 9, 9, 9, 10, 11};
    static int[] bits7 = {1, 3, 6, 7, 8, 9, 10, 11, 3, 4, 6, 7, 8, 8, 9, 9, 6, 6, 7, 8, 8, 9, 9, 10, 7, 7, 8, 8, 9, 9, 10, 10, 8, 8, 9, 9, 10, 10, 10, 11, 9, 8, 9, 9, 10, 10, 11, 11, 10, 9, 9, 10, 10, 11, 12, 12, 11, 10, 10, 10, 11, 11, 12, 12};
    static int[] bits8 = {5, 4, 5, 6, 7, 8, 9, 10, 4, 3, 4, 5, 6, 7, 7, 8, 5, 4, 4, 5, 6, 7, 7, 8, 6, 5, 5, 6, 6, 7, 8, 8, 7, 6, 6, 6, 7, 7, 8, 9, 8, 7, 6, 7, 7, 8, 8, 10, 9, 7, 7, 8, 8, 8, 9, 9, 10, 8, 8, 8, 9, 9, 9, 10};
    static int[] bits9;
    static int[] codebook_vector02_idx = {0, 33088, 33152, 16656, 49744, 49808, 16672, 49760, 49824, 8452, 41540, 41604, 25108, 58196, 58260, 25124, 58212, 58276, 8456, 41544, 41608, 25112, 58200, 58264, 25128, 58216, 58280, 4353, 37441, 37505, 21009, 54097, 54161, 21025, 54113, 54177, 12805, 45893, 45957, 29461, 62549, 62613, 29477, 62565, 62629, 12809, 45897, 45961, 29465, 62553, 62617, 29481, 62569, 62633, 4354, 37442, 37506, 21010, 54098, 54162, 21026, 54114, 54178, 12806, 45894, 45958, 29462, 62550, 62614, 29478, 62566, 62630, 12810, 45898, 45962, 29466, 62554, 62618, 29482, 62570, 62634};
    static float[] codebook_vector0_vals = {-1.0f, 0.0f, 1.0f};
    static int[] codebook_vector10_idx = {0, 4112, 4128, 4144, 4160, 4176, 4192, 4208, 4224, 4240, 4256, 4272, 4288, 4304, 4320, 4336, 4608, C1406n.f5541H, 8209, 8225, 8241, 8257, 8273, 8289, 8305, 8321, 8337, 8353, 8369, 8385, 8401, 8417, 8433, 8705, C0986h.f4410l, 8210, 8226, 8242, 8258, 8274, 8290, 8306, 8322, 8338, 8354, 8370, 8386, 8402, 8418, 8434, 8706, C1406n.f5543J, 8211, 8227, 8243, 8259, 8275, 8291, 8307, 8323, 8339, 8355, 8371, 8387, 8403, 8419, 8435, 8707, 4100, 8212, 8228, 8244, 8260, 8276, 8292, 8308, 8324, 8340, 8356, 8372, 8388, 8404, 8420, 8436, 8708, 4101, 8213, 8229, 8245, 8261, 8277, 8293, 8309, 8325, 8341, 8357, 8373, 8389, 8405, 8421, 8437, 8709, 4102, 8214, 8230, 8246, 8262, 8278, 8294, 8310, 8326, 8342, 8358, 8374, 8390, 8406, 8422, 8438, 8710, 4103, 8215, 8231, 8247, 8263, 8279, 8295, 8311, 8327, 8343, 8359, 8375, 8391, 8407, 8423, 8439, 8711, 4104, 8216, 8232, 8248, 8264, 8280, 8296, 8312, 8328, 8344, 8360, 8376, 8392, 8408, 8424, 8440, 8712, 4105, 8217, 8233, 8249, 8265, 8281, 8297, 8313, 8329, 8345, 8361, 8377, 8393, 8409, 8425, 8441, 8713, C14020f.f41199h, 8218, 8234, 8250, 8266, 8282, 8298, 8314, 8330, 8346, 8362, 8378, 8394, 8410, 8426, 8442, 8714, 4107, 8219, 8235, 8251, 8267, 8283, 8299, 8315, 8331, 8347, 8363, 8379, 8395, 8411, 8427, 8443, 8715, 4108, 8220, 8236, 8252, 8268, 8284, 8300, 8316, 8332, 8348, 8364, 8380, 8396, 8412, 8428, 8444, 8716, 4109, 8221, 8237, 8253, 8269, 8285, 8301, 8317, 8333, 8349, 8365, 8381, 8397, 8413, 8429, 8445, 8717, 4110, 8222, 8238, 8254, 8270, 8286, 8302, 8318, 8334, 8350, 8366, 8382, 8398, 8414, 8430, 8446, 8718, 4111, 8223, 8239, 8255, 8271, 8287, 8303, 8319, 8335, 8351, 8367, 8383, 8399, 8415, 8431, 8447, 8719, 4352, 8464, 8480, 8496, 8512, 8528, 8544, 8560, 8576, 8592, 8608, 8624, 8640, 8656, 8672, 8688, 8960};
    static float[] codebook_vector10_vals = {0.0f, 1.0f, 2.5198421f, 4.326749f, 6.349604f, 8.54988f, 10.902723f, 13.390518f, 16.0f, 18.720755f, 21.544348f, 24.463781f, 27.473143f, 30.56735f, 33.741993f, 36.99318f};
    static int[] codebook_vector4_idx = {0, 16, 32, 48, 64, 80, 96, 112, 128, 1, 17, 33, 49, 65, 81, 97, 113, C13959t.f40835R1, 2, 18, 34, 50, 66, 82, 98, 114, C13959t.f40839S1, 3, 19, 35, 51, 67, 83, 99, 115, C13959t.f40843T1, 4, 20, 36, 52, 68, 84, 100, 116, C13959t.f40847U1, 5, 21, 37, 53, 69, 85, 101, 117, C13959t.f40851V1, 6, 22, 38, 54, 70, 86, 102, 118, C13959t.f40855W1, 7, 23, 39, 55, 71, 87, 103, 119, C13959t.f40859X1, 8, 24, 40, 56, 72, 88, 104, 120, C13959t.f40863Y1};
    static float[] codebook_vector4_vals = {-6.349604f, -4.326749f, -2.5198421f, -1.0f, 0.0f, 1.0f, 2.5198421f, 4.326749f, 6.349604f};
    static int[] codebook_vector6_idx = {0, 272, 288, 304, 320, 336, 352, 368, 4353, 529, 545, 561, 577, 593, 609, 625, 4354, 530, 546, 562, 578, 594, 610, 626, 4355, 531, 547, 563, 579, 595, 611, 627, 4356, 532, 548, 564, 580, 596, C11718b.f33924p, 628, 4357, 533, 549, 565, 581, 597, 613, 629, 4358, 534, 550, 566, 582, 598, 614, 630, 4359, 535, 551, 567, 583, 599, 615, 631};
    static int[] codebook_vector8_idx;
    static int[] codes1 = {2040, 497, 2045, C1056z.f4713o, 104, 1008, 2039, 492, 2037, 1009, 114, 1012, 116, 17, 118, 491, 108, C1056z.f4714p, 2044, 481, 2033, 496, 97, 502, 2034, 490, 2043, 498, 105, FacebookRequestErrorClassification.ESC_APP_INACTIVE, 119, 23, 111, 486, 100, 485, 103, 21, 98, 18, 0, 20, 101, 22, 109, 489, 99, 484, 107, 19, 113, 483, 112, 499, 2046, 487, 2035, MPSUtils.VIDEO_MAX, 96, 494, 2032, 482, 2042, 1011, 106, 488, 117, 16, 115, 500, 110, 1015, 2038, MPSUtils.VIDEO_MIN, 2041, 1010, 102, C15470v.f44654Q, 2047, 503, 2036};
    static int[] codes10;
    static int[] codes11 = {0, 6, 25, 61, C13959t.f40953s2, C13959t.f40908h3, C15470v.f44651N, 912, 962, 991, 2022, 2035, 4091, 2028, 4090, 4094, 910, 5, 1, 8, 20, 55, 66, C13959t.f40912i2, 175, 401, 421, 437, 926, 960, 930, 973, 2006, C13959t.f40808K2, 23, 7, 9, 24, 57, 64, C13959t.f40892e2, C13959t.f40981z2, 184, 409, 428, 449, 945, 918, 958, 970, C13959t.f40957t2, 60, 21, 22, 26, 59, 68, C13959t.f40907h2, C13959t.f40772B2, 190, C15470v.f44684y, 430, 441, C9161a.f24030a, 913, C11644i.f33422u0, 981, C13959t.f40921k2, C13959t.f40945q2, 54, 56, 58, 65, C13959t.f40882c2, C13959t.f40949r2, C13959t.f40816M2, 195, C15470v.f44644G, 427, MPSUtils.PSM, 927, 911, 937, 975, C13959t.f40917j2, C13959t.f40878b3, 62, 63, 67, 69, C13959t.f40961u2, C13959t.f40780D2, C13959t.f40852V2, 404, 418, MPSUtils.PACK, 451, 934, 935, 955, 980, C13959t.f40965v2, C15470v.f44646I, C13959t.f40897f2, C13959t.f40887d2, C13959t.f40902g2, C13959t.f40937o2, C13959t.f40776C2, C13959t.f40840S2, JpegConst.DHT, C15470v.f44645H, 431, MPSUtils.PRIVATE_2, 921, 959, 948, 969, C11644i.f33446x0, C13959t.f40784E2, 438, C13959t.f40796H2, C13959t.f40768A2, C13959t.f40792G2, 178, 194, C13959t.f40903g3, C15470v.f44638A, C15470v.f44649L, 440, 908, 932, 964, 966, 989, 1000, C13959t.f40804J2, 943, 402, C13959t.f40868Z2, C13959t.f40864Y2, 398, C15470v.f44685z, C15470v.f44640C, C15470v.f44648K, 433, 909, 920, 951, 979, 977, 987, 2013, 180, 990, 425, C15470v.f44641D, 412, C15470v.f44647J, 426, 429, 435, 907, 946, 952, 974, 993, 992, 2002, 2021, 183, 2019, 443, C15470v.f44652O, 422, 432, 434, 439, 923, 922, 954, 949, 982, 2007, 996, 2008, 2026, C13959t.f40856W2, 2024, C9161a.f24031b, MPSUtils.PRIVATE_1, 436, 906, 452, 914, 938, 944, 956, 983, 2004, 2012, CropImage.f34773g, 2005, 2032, 193, 2043, 968, 931, 917, 925, 940, 942, 965, 984, 994, 998, 2020, 2023, 2016, 2025, 2039, 400, 2034, 915, 446, MPSUtils.AUDIO_MIN, 916, 919, 941, 963, 961, 978, 2010, 2009, 2015, 2027, 2036, 2042, 405, 2040, 957, 924, 939, 936, 947, 953, 976, 995, 997, 2018, 2014, 2029, 2033, 2041, 2044, 403, 4093, 988, 950, 967, 972, 971, 985, 986, 2003, 2017, 2030, 2031, 2037, 2038, 4092, 4095, C15470v.f44643F, 450, 181, C13959t.f40973x2, C13959t.f40929m2, C13959t.f40933n2, C13959t.f40925l2, C13959t.f40941p2, C13959t.f40969w2, C13959t.f40977y2, C13959t.f40800I2, C13959t.f40788F2, C13959t.f40820N2, 179, C13959t.f40860X2, 192, 399, 4};
    static int[] codes2 = {499, 111, 509, JpegConst.APPB, 35, JpegConst.APPA, 503, JpegConst.APP8, 506, 242, 45, 112, 32, 6, 43, 110, 40, JpegConst.APP9, C15470v.f44658U, 102, 248, JpegConst.APP7, 27, 241, 500, 107, C15470v.f44654Q, JpegConst.APPC, 42, 108, 44, 10, 39, 103, 26, 245, 36, 8, 31, 9, 0, 7, 29, 11, 48, JpegConst.APPF, 28, 100, 30, 12, 41, 243, 47, 240, 508, 113, 498, 244, 33, JpegConst.APP6, 247, 104, C15470v.f44657T, JpegConst.APPE, 34, 101, 49, 2, 38, JpegConst.APPD, 37, 106, C15470v.f44659V, 114, 510, 105, 46, 246, C0753l.f3451u, 109, 502};
    static int[] codes3 = {0, 9, JpegConst.APPF, 11, 25, 240, 491, 486, 1010, 10, 53, MPSUtils.VIDEO_MAX, 52, 55, 489, FacebookRequestErrorClassification.ESC_APP_INACTIVE, 487, 1011, 494, 1005, 8186, 492, 498, 2041, 2040, C1056z.f4716r, 4088, 8, 56, C1056z.f4714p, 54, 117, 1009, 1003, 1004, 4084, 24, 118, 2036, 57, 116, 1007, 499, 500, 2038, 488, 1002, 8188, 242, 497, 4091, C1056z.f4713o, 2035, 4092, JpegConst.APPE, 1015, 32766, 496, 2037, 32765, 8187, 16378, 65535, 241, 1008, 16380, 490, 1006, 16379, 4086, 4090, 32764, 2034, 4085, 65534, 1012, 2039, 32763, 4087, 4089, 32762};
    static int[] codes4 = {7, 22, 246, 24, 8, JpegConst.APPF, MPSUtils.VIDEO_MAX, 243, 2040, 25, 23, JpegConst.APPD, 21, 1, JpegConst.APP2, 240, 112, 1008, 494, 241, 2042, JpegConst.APPE, JpegConst.APP4, 1010, 2038, 1007, 2045, 5, 20, 242, 9, 4, JpegConst.APP5, 244, JpegConst.APP8, 1012, 6, 2, JpegConst.APP7, 3, 0, 107, JpegConst.APP3, 105, 499, JpegConst.APPB, JpegConst.APP6, C1056z.f4714p, 110, 106, 500, 1004, 496, C1056z.f4717s, 245, JpegConst.APPC, 2043, JpegConst.APPA, 111, 1015, 2041, 1011, 4095, JpegConst.APP9, 109, C1056z.f4716r, 108, 104, C15470v.f44654Q, 1006, 498, 2036, 2039, 1009, 4094, 1005, 497, 2037, 2046, C1056z.f4713o, 2044};
    static int[] codes5 = {8191, 4087, 2036, 2024, 1009, 2030, 2041, 4088, 8189, 4093, 2033, 1000, 488, 240, 492, 1006, 2034, 4090, 4084, 1007, 498, JpegConst.APP8, 112, JpegConst.APPC, 496, 1002, 2035, 2027, 491, JpegConst.APPA, 26, 8, 25, JpegConst.APPE, MPSUtils.VIDEO_MAX, 2029, 1008, 242, 115, 11, 0, 10, 113, 243, 2025, 2031, 494, JpegConst.APPF, 24, 9, 27, JpegConst.APPB, 489, 2028, 2038, 1003, 499, JpegConst.APPD, 114, JpegConst.APP9, 497, 1005, 2039, 4086, 2032, 1001, FacebookRequestErrorClassification.ESC_APP_INACTIVE, 241, 490, 1004, 2040, 4089, 8188, 4092, 4085, 2026, 1011, 1010, 2037, 4091, 8190};
    static int[] codes6 = {2046, 1021, 497, 491, 500, 490, 496, C1056z.f4720v, 2045, C1056z.f4714p, 485, JpegConst.APPA, 108, 113, 104, 240, 486, 1015, 499, JpegConst.APPF, 50, 39, 40, 38, 49, JpegConst.APPB, 503, 488, 111, 46, 8, 4, 6, 41, 107, 494, MPSUtils.VIDEO_MAX, 114, 45, 2, 0, 3, 47, 115, 506, 487, 110, 43, 7, 1, 5, 44, 109, 492, C15470v.f44658U, JpegConst.APPE, 48, 36, 42, 37, 51, JpegConst.APPC, 498, C1056z.f4716r, 484, JpegConst.APPD, 106, 112, 105, 116, 241, C1056z.f4718t, 2047, C1056z.f4717s, 502, FacebookRequestErrorClassification.ESC_APP_INACTIVE, C15470v.f44657T, 489, C15470v.f44654Q, C1056z.f4719u, 2044};
    static int[] codes7 = {0, 5, 55, 116, 242, 491, 1005, 2039, 4, 12, 53, 113, JpegConst.APPC, JpegConst.APPE, 494, C15470v.f44654Q, 54, 52, 114, JpegConst.APPA, 241, 489, 499, C1056z.f4713o, 115, 112, JpegConst.APPB, 240, 497, 496, 1004, C1056z.f4718t, 243, JpegConst.APPD, 488, MPSUtils.VIDEO_MAX, 1007, 1009, C1056z.f4717s, 2043, FacebookRequestErrorClassification.ESC_APP_INACTIVE, JpegConst.APPF, 490, 498, 1011, C1056z.f4716r, 2041, 2044, 1006, 492, 500, 1012, 1015, 2040, 4093, 4094, 2038, 1008, 1010, C1056z.f4714p, 2042, 2045, 4092, 4095};
    static int[] codes8 = {14, 5, 16, 48, 111, 241, 506, C11644i.f33058C0, 3, 0, 4, 18, 44, 106, 117, 248, 15, 2, 6, 20, 46, 105, 114, 245, 47, 17, 19, 42, 50, 108, JpegConst.APPC, C1750f.f6813c, 113, 43, 45, 49, 109, 112, 242, C15470v.f44658U, JpegConst.APPF, 104, 51, 107, 110, JpegConst.APPE, 249, C1056z.f4720v, C15470v.f44657T, 116, 115, JpegConst.APPD, 240, 246, 502, 509, 1021, 243, 244, 247, 503, C15470v.f44659V, 508, 1023};
    static int[] codes9;
    static final int[] ff_aac_num_swb_1024 = {41, 41, 47, 49, 49, 51, 47, 47, 43, 43, 43, 40, 40};
    static final int[] ff_aac_num_swb_128 = {12, 12, 12, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15};
    static int[] ff_aac_scalefactor_bits = {18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 18, 19, 18, 17, 17, 16, 17, 16, 16, 16, 16, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 12, 12, 12, 11, 12, 11, 10, 10, 10, 9, 9, 8, 8, 8, 7, 6, 6, 5, 4, 3, 1, 4, 4, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 16, 15, 16, 15, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19};
    static int[] ff_aac_scalefactor_code = {262120, 262118, 262119, 262117, 524277, 524273, 524269, 524278, 524270, 524271, 524272, 524284, 524285, 524287, 524286, 524279, 524280, 524283, 524281, 262116, 524282, 262115, 131055, 131056, 65525, 131054, 65522, 65523, 65524, 65521, 32758, 32759, 16377, 16373, 16375, 16371, 16374, 16370, 8183, 8181, 4089, 4087, 4086, 2041, 4084, 2040, C1056z.f4717s, 1015, C1056z.f4713o, C15470v.f44657T, 503, C1750f.f6813c, 248, 246, 121, 58, 56, 26, 11, 4, 0, 10, 12, 27, 57, 59, 120, 122, 247, 249, 502, C15470v.f44658U, 1012, C1056z.f4714p, C1056z.f4716r, 2037, 2036, 2038, 2039, 4085, 4088, 8180, 8182, 8184, 16376, 16372, 65520, 32756, 65526, 32757, 262114, 524249, 524250, 524251, 524252, 524253, 524254, 524248, 524242, 524243, 524244, 524245, 524246, 524274, 524255, 524263, 524264, 524265, 524266, 524267, 524262, 524256, 524257, 524258, 524259, 524260, 524261, 524247, 524268, 524276, 524275};
    static final int[][] ff_swb_offset_1024;
    static final int[][] ff_swb_offset_128;
    static float[] ltpCoefTab = {0.570829f, 0.696616f, 0.813004f, 0.911304f, 0.9849f, 1.067894f, 1.194601f, 1.369533f};
    static int[] maxSfbTab = {33, 33, 38, 40, 40, 40, 41, 41, 37, 37, 37, 34, 34};
    static final int[] swb_offset_1024_16 = {0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 100, 112, 124, C13959t.f40863Y1, C13959t.f40921k2, C13959t.f40969w2, C13959t.f40800I2, 184, JpegConst.DHT, JpegConst.RST4, JpegConst.APP4, 244, 260, 280, 300, 320, 344, 368, 396, C15470v.f44652O, 456, 492, 532, 572, 616, 664, 716, 772, 832, 896, 960, 1024};
    static final int[] swb_offset_1024_24 = {0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 52, 60, 68, 76, 84, 92, 100, 108, 116, 124, C13959t.f40863Y1, C13959t.f40921k2, C13959t.f40969w2, C13959t.f40800I2, C13959t.f40864Y2, 204, 220, 240, 260, 284, 308, 336, 364, 396, 432, 468, 508, 552, C14330v.f42355w, 652, 704, 768, 832, 896, 960, 1024};
    static final int[] swb_offset_1024_32 = {0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 48, 56, 64, 72, 80, 88, 96, 108, 120, C13959t.f40847U1, C13959t.f40902g2, C13959t.f40969w2, C13959t.f40816M2, JpegConst.DHT, 216, 240, 264, 292, 320, 352, BitmapCounterConfig.DEFAULT_MAX_BITMAP_COUNT, C15470v.f44646I, MPSUtils.AUDIO_MIN, MPSUtils.VIDEO_MIN, 512, 544, 576, 608, 640, 672, 704, 736, 768, MaterialMenuDrawable.DEFAULT_TRANSFORM_DURATION, 832, 864, 896, C9161a.f24031b, 960, 992, 1024};
    static final int[] swb_offset_1024_48 = {0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 48, 56, 64, 72, 80, 88, 96, 108, 120, C13959t.f40847U1, C13959t.f40902g2, C13959t.f40969w2, C13959t.f40816M2, JpegConst.DHT, 216, 240, 264, 292, 320, 352, BitmapCounterConfig.DEFAULT_MAX_BITMAP_COUNT, C15470v.f44646I, MPSUtils.AUDIO_MIN, MPSUtils.VIDEO_MIN, 512, 544, 576, 608, 640, 672, 704, 736, 768, MaterialMenuDrawable.DEFAULT_TRANSFORM_DURATION, 832, 864, 896, C9161a.f24031b, 1024};
    static final int[] swb_offset_1024_64 = {0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 64, 72, 80, 88, 100, 112, 124, C13959t.f40882c2, C13959t.f40953s2, C13959t.f40800I2, 192, 216, 240, 268, 304, 344, BitmapCounterConfig.DEFAULT_MAX_BITMAP_COUNT, C15470v.f44652O, 464, C15470v.f44657T, 544, 584, 624, 664, 704, 744, 784, 824, 864, 904, 944, 984, 1024};
    static final int[] swb_offset_1024_8 = {0, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, C13959t.f40847U1, C13959t.f40902g2, C13959t.f40953s2, C13959t.f40800I2, C13959t.f40864Y2, 204, 220, JpegConst.APPC, 252, 268, 288, 308, 328, 348, 372, 396, C15470v.f44649L, MPSUtils.AUDIO_MIN, 476, 508, 544, 580, 620, 664, 712, 764, 820, 880, 944, 1024};
    static final int[] swb_offset_1024_96 = {0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 64, 72, 80, 88, 96, 108, 120, C13959t.f40847U1, C13959t.f40902g2, C13959t.f40953s2, C13959t.f40800I2, C13959t.f40864Y2, JpegConst.RST4, 240, 276, 320, BitmapCounterConfig.DEFAULT_MAX_BITMAP_COUNT, MPSUtils.AUDIO_MIN, 512, 576, 640, 704, 768, 832, 896, 960, 1024};
    static final int[] swb_offset_128_16 = {0, 4, 8, 12, 16, 20, 24, 28, 32, 40, 48, 60, 72, 88, 108, 128};
    static final int[] swb_offset_128_24 = {0, 4, 8, 12, 16, 20, 24, 28, 36, 44, 52, 64, 76, 92, 108, 128};
    static final int[] swb_offset_128_48 = {0, 4, 8, 12, 16, 20, 28, 36, 44, 56, 68, 80, 96, 112, 128};
    static final int[] swb_offset_128_8 = {0, 4, 8, 12, 16, 20, 24, 28, 36, 44, 52, 60, 72, 88, 108, 128};
    static final int[] swb_offset_128_96 = {0, 4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 92, 128};
    static final float[][] tns_tmp2_map = {tns_tmp2_map_0_3, tns_tmp2_map_0_4, tns_tmp2_map_1_3, tns_tmp2_map_1_4};
    static final float[] tns_tmp2_map_0_3 = {0.0f, -0.43388373f, -0.7818315f, -0.9749279f, 0.9848077f, 0.8660254f, 0.6427876f, 0.34202015f};
    static final float[] tns_tmp2_map_0_4 = {0.0f, -0.2079117f, -0.40673664f, -0.58778524f, -0.7431448f, -0.8660254f, -0.95105654f, -0.9945219f, 0.99573416f, 0.9618256f, 0.8951633f, 0.7980172f, 0.6736956f, 0.52643216f, 0.36124167f, 0.18374951f};
    static final float[] tns_tmp2_map_1_3 = {0.0f, -0.43388373f, 0.6427876f, 0.34202015f};
    static final float[] tns_tmp2_map_1_4 = {0.0f, -0.2079117f, -0.40673664f, -0.58778524f, 0.6736956f, 0.52643216f, 0.36124167f, 0.18374951f};

    static {
        int[] iArr = new int[C13959t.f40788F2];
        // fill-array-data instruction
        iArr[0] = 0;
        iArr[1] = 5;
        iArr[2] = 55;
        iArr[3] = 231;
        iArr[4] = 478;
        iArr[5] = 974;
        iArr[6] = 985;
        iArr[7] = 1992;
        iArr[8] = 1997;
        iArr[9] = 4040;
        iArr[10] = 4061;
        iArr[11] = 8164;
        iArr[12] = 8172;
        iArr[13] = 4;
        iArr[14] = 12;
        iArr[15] = 53;
        iArr[16] = 114;
        iArr[17] = 234;
        iArr[18] = 237;
        iArr[19] = 482;
        iArr[20] = 977;
        iArr[21] = 979;
        iArr[22] = 992;
        iArr[23] = 2008;
        iArr[24] = 4047;
        iArr[25] = 4053;
        iArr[26] = 54;
        iArr[27] = 52;
        iArr[28] = 113;
        iArr[29] = 232;
        iArr[30] = 236;
        iArr[31] = 481;
        iArr[32] = 975;
        iArr[33] = 989;
        iArr[34] = 987;
        iArr[35] = 2000;
        iArr[36] = 4039;
        iArr[37] = 4052;
        iArr[38] = 4068;
        iArr[39] = 230;
        iArr[40] = 112;
        iArr[41] = 233;
        iArr[42] = 477;
        iArr[43] = 483;
        iArr[44] = 978;
        iArr[45] = 988;
        iArr[46] = 1996;
        iArr[47] = 1994;
        iArr[48] = 2014;
        iArr[49] = 4056;
        iArr[50] = 4074;
        iArr[51] = 8155;
        iArr[52] = 479;
        iArr[53] = 235;
        iArr[54] = 476;
        iArr[55] = 486;
        iArr[56] = 981;
        iArr[57] = 990;
        iArr[58] = 1995;
        iArr[59] = 2013;
        iArr[60] = 2012;
        iArr[61] = 4045;
        iArr[62] = 4066;
        iArr[63] = 4071;
        iArr[64] = 8161;
        iArr[65] = 976;
        iArr[66] = 480;
        iArr[67] = 484;
        iArr[68] = 982;
        iArr[69] = 1989;
        iArr[70] = 2001;
        iArr[71] = 2011;
        iArr[72] = 4050;
        iArr[73] = 2016;
        iArr[74] = 4057;
        iArr[75] = 4075;
        iArr[76] = 8163;
        iArr[77] = 8169;
        iArr[78] = 1988;
        iArr[79] = 485;
        iArr[80] = 983;
        iArr[81] = 1990;
        iArr[82] = 1999;
        iArr[83] = 2010;
        iArr[84] = 4043;
        iArr[85] = 4058;
        iArr[86] = 4067;
        iArr[87] = 4073;
        iArr[88] = 8166;
        iArr[89] = 8179;
        iArr[90] = 8183;
        iArr[91] = 2003;
        iArr[92] = 984;
        iArr[93] = 993;
        iArr[94] = 2004;
        iArr[95] = 2009;
        iArr[96] = 4051;
        iArr[97] = 4062;
        iArr[98] = 8157;
        iArr[99] = 8153;
        iArr[100] = 8162;
        iArr[101] = 8170;
        iArr[102] = 8177;
        iArr[103] = 8182;
        iArr[104] = 2002;
        iArr[105] = 980;
        iArr[106] = 986;
        iArr[107] = 1991;
        iArr[108] = 2007;
        iArr[109] = 2018;
        iArr[110] = 4046;
        iArr[111] = 4059;
        iArr[112] = 8152;
        iArr[113] = 8174;
        iArr[114] = 16368;
        iArr[115] = 8180;
        iArr[116] = 16370;
        iArr[117] = 2017;
        iArr[118] = 991;
        iArr[119] = 1993;
        iArr[120] = 2006;
        iArr[121] = 4042;
        iArr[122] = 4048;
        iArr[123] = 4069;
        iArr[124] = 4070;
        iArr[125] = 8171;
        iArr[126] = 8175;
        iArr[127] = 16371;
        iArr[128] = 16372;
        iArr[129] = 16373;
        iArr[130] = 4064;
        iArr[131] = 1998;
        iArr[132] = 2005;
        iArr[133] = 4038;
        iArr[134] = 4049;
        iArr[135] = 4065;
        iArr[136] = 8160;
        iArr[137] = 8168;
        iArr[138] = 8176;
        iArr[139] = 16369;
        iArr[140] = 16376;
        iArr[141] = 16374;
        iArr[142] = 32764;
        iArr[143] = 4072;
        iArr[144] = 2015;
        iArr[145] = 4041;
        iArr[146] = 4055;
        iArr[147] = 4060;
        iArr[148] = 8156;
        iArr[149] = 8159;
        iArr[150] = 8173;
        iArr[151] = 8181;
        iArr[152] = 16377;
        iArr[153] = 16379;
        iArr[154] = 32765;
        iArr[155] = 32766;
        iArr[156] = 8167;
        iArr[157] = 4044;
        iArr[158] = 4054;
        iArr[159] = 4063;
        iArr[160] = 8158;
        iArr[161] = 8154;
        iArr[162] = 8165;
        iArr[163] = 8178;
        iArr[164] = 16378;
        iArr[165] = 16375;
        iArr[166] = 16380;
        iArr[167] = 16381;
        iArr[168] = 32767;
        codes9 = iArr;
        int[] iArr2 = new int[C13959t.f40788F2];
        // fill-array-data instruction
        iArr2[0] = 1;
        iArr2[1] = 3;
        iArr2[2] = 6;
        iArr2[3] = 8;
        iArr2[4] = 9;
        iArr2[5] = 10;
        iArr2[6] = 10;
        iArr2[7] = 11;
        iArr2[8] = 11;
        iArr2[9] = 12;
        iArr2[10] = 12;
        iArr2[11] = 13;
        iArr2[12] = 13;
        iArr2[13] = 3;
        iArr2[14] = 4;
        iArr2[15] = 6;
        iArr2[16] = 7;
        iArr2[17] = 8;
        iArr2[18] = 8;
        iArr2[19] = 9;
        iArr2[20] = 10;
        iArr2[21] = 10;
        iArr2[22] = 10;
        iArr2[23] = 11;
        iArr2[24] = 12;
        iArr2[25] = 12;
        iArr2[26] = 6;
        iArr2[27] = 6;
        iArr2[28] = 7;
        iArr2[29] = 8;
        iArr2[30] = 8;
        iArr2[31] = 9;
        iArr2[32] = 10;
        iArr2[33] = 10;
        iArr2[34] = 10;
        iArr2[35] = 11;
        iArr2[36] = 12;
        iArr2[37] = 12;
        iArr2[38] = 12;
        iArr2[39] = 8;
        iArr2[40] = 7;
        iArr2[41] = 8;
        iArr2[42] = 9;
        iArr2[43] = 9;
        iArr2[44] = 10;
        iArr2[45] = 10;
        iArr2[46] = 11;
        iArr2[47] = 11;
        iArr2[48] = 11;
        iArr2[49] = 12;
        iArr2[50] = 12;
        iArr2[51] = 13;
        iArr2[52] = 9;
        iArr2[53] = 8;
        iArr2[54] = 9;
        iArr2[55] = 9;
        iArr2[56] = 10;
        iArr2[57] = 10;
        iArr2[58] = 11;
        iArr2[59] = 11;
        iArr2[60] = 11;
        iArr2[61] = 12;
        iArr2[62] = 12;
        iArr2[63] = 12;
        iArr2[64] = 13;
        iArr2[65] = 10;
        iArr2[66] = 9;
        iArr2[67] = 9;
        iArr2[68] = 10;
        iArr2[69] = 11;
        iArr2[70] = 11;
        iArr2[71] = 11;
        iArr2[72] = 12;
        iArr2[73] = 11;
        iArr2[74] = 12;
        iArr2[75] = 12;
        iArr2[76] = 13;
        iArr2[77] = 13;
        iArr2[78] = 11;
        iArr2[79] = 9;
        iArr2[80] = 10;
        iArr2[81] = 11;
        iArr2[82] = 11;
        iArr2[83] = 11;
        iArr2[84] = 12;
        iArr2[85] = 12;
        iArr2[86] = 12;
        iArr2[87] = 12;
        iArr2[88] = 13;
        iArr2[89] = 13;
        iArr2[90] = 13;
        iArr2[91] = 11;
        iArr2[92] = 10;
        iArr2[93] = 10;
        iArr2[94] = 11;
        iArr2[95] = 11;
        iArr2[96] = 12;
        iArr2[97] = 12;
        iArr2[98] = 13;
        iArr2[99] = 13;
        iArr2[100] = 13;
        iArr2[101] = 13;
        iArr2[102] = 13;
        iArr2[103] = 13;
        iArr2[104] = 11;
        iArr2[105] = 10;
        iArr2[106] = 10;
        iArr2[107] = 11;
        iArr2[108] = 11;
        iArr2[109] = 11;
        iArr2[110] = 12;
        iArr2[111] = 12;
        iArr2[112] = 13;
        iArr2[113] = 13;
        iArr2[114] = 14;
        iArr2[115] = 13;
        iArr2[116] = 14;
        iArr2[117] = 11;
        iArr2[118] = 10;
        iArr2[119] = 11;
        iArr2[120] = 11;
        iArr2[121] = 12;
        iArr2[122] = 12;
        iArr2[123] = 12;
        iArr2[124] = 12;
        iArr2[125] = 13;
        iArr2[126] = 13;
        iArr2[127] = 14;
        iArr2[128] = 14;
        iArr2[129] = 14;
        iArr2[130] = 12;
        iArr2[131] = 11;
        iArr2[132] = 11;
        iArr2[133] = 12;
        iArr2[134] = 12;
        iArr2[135] = 12;
        iArr2[136] = 13;
        iArr2[137] = 13;
        iArr2[138] = 13;
        iArr2[139] = 14;
        iArr2[140] = 14;
        iArr2[141] = 14;
        iArr2[142] = 15;
        iArr2[143] = 12;
        iArr2[144] = 11;
        iArr2[145] = 12;
        iArr2[146] = 12;
        iArr2[147] = 12;
        iArr2[148] = 13;
        iArr2[149] = 13;
        iArr2[150] = 13;
        iArr2[151] = 13;
        iArr2[152] = 14;
        iArr2[153] = 14;
        iArr2[154] = 15;
        iArr2[155] = 15;
        iArr2[156] = 13;
        iArr2[157] = 12;
        iArr2[158] = 12;
        iArr2[159] = 12;
        iArr2[160] = 13;
        iArr2[161] = 13;
        iArr2[162] = 13;
        iArr2[163] = 13;
        iArr2[164] = 14;
        iArr2[165] = 14;
        iArr2[166] = 14;
        iArr2[167] = 14;
        iArr2[168] = 15;
        bits9 = iArr2;
        int[] iArr3 = new int[C13959t.f40788F2];
        // fill-array-data instruction
        iArr3[0] = 34;
        iArr3[1] = 8;
        iArr3[2] = 29;
        iArr3[3] = 38;
        iArr3[4] = 95;
        iArr3[5] = 211;
        iArr3[6] = 463;
        iArr3[7] = 976;
        iArr3[8] = 983;
        iArr3[9] = 1005;
        iArr3[10] = 2032;
        iArr3[11] = 2038;
        iArr3[12] = 4093;
        iArr3[13] = 7;
        iArr3[14] = 0;
        iArr3[15] = 1;
        iArr3[16] = 9;
        iArr3[17] = 32;
        iArr3[18] = 84;
        iArr3[19] = 96;
        iArr3[20] = 213;
        iArr3[21] = 220;
        iArr3[22] = 468;
        iArr3[23] = 973;
        iArr3[24] = 990;
        iArr3[25] = 2023;
        iArr3[26] = 28;
        iArr3[27] = 2;
        iArr3[28] = 6;
        iArr3[29] = 12;
        iArr3[30] = 30;
        iArr3[31] = 40;
        iArr3[32] = 91;
        iArr3[33] = 205;
        iArr3[34] = 217;
        iArr3[35] = 462;
        iArr3[36] = 476;
        iArr3[37] = 985;
        iArr3[38] = 1009;
        iArr3[39] = 37;
        iArr3[40] = 11;
        iArr3[41] = 10;
        iArr3[42] = 13;
        iArr3[43] = 36;
        iArr3[44] = 87;
        iArr3[45] = 97;
        iArr3[46] = 204;
        iArr3[47] = 221;
        iArr3[48] = 460;
        iArr3[49] = 478;
        iArr3[50] = 979;
        iArr3[51] = 999;
        iArr3[52] = 93;
        iArr3[53] = 33;
        iArr3[54] = 31;
        iArr3[55] = 35;
        iArr3[56] = 39;
        iArr3[57] = 89;
        iArr3[58] = 100;
        iArr3[59] = 216;
        iArr3[60] = 223;
        iArr3[61] = 466;
        iArr3[62] = 482;
        iArr3[63] = 989;
        iArr3[64] = 1006;
        iArr3[65] = 209;
        iArr3[66] = 85;
        iArr3[67] = 41;
        iArr3[68] = 86;
        iArr3[69] = 88;
        iArr3[70] = 98;
        iArr3[71] = 206;
        iArr3[72] = 224;
        iArr3[73] = 226;
        iArr3[74] = 474;
        iArr3[75] = 980;
        iArr3[76] = 995;
        iArr3[77] = 2027;
        iArr3[78] = 457;
        iArr3[79] = 94;
        iArr3[80] = 90;
        iArr3[81] = 92;
        iArr3[82] = 99;
        iArr3[83] = 202;
        iArr3[84] = 218;
        iArr3[85] = 455;
        iArr3[86] = 458;
        iArr3[87] = 480;
        iArr3[88] = 987;
        iArr3[89] = 1000;
        iArr3[90] = 2028;
        iArr3[91] = 483;
        iArr3[92] = 210;
        iArr3[93] = 203;
        iArr3[94] = 208;
        iArr3[95] = 215;
        iArr3[96] = 219;
        iArr3[97] = 454;
        iArr3[98] = 469;
        iArr3[99] = 472;
        iArr3[100] = 970;
        iArr3[101] = 986;
        iArr3[102] = 2026;
        iArr3[103] = 2033;
        iArr3[104] = 481;
        iArr3[105] = 212;
        iArr3[106] = 207;
        iArr3[107] = 214;
        iArr3[108] = 222;
        iArr3[109] = 225;
        iArr3[110] = 464;
        iArr3[111] = 470;
        iArr3[112] = 977;
        iArr3[113] = 981;
        iArr3[114] = 1010;
        iArr3[115] = 2030;
        iArr3[116] = 2043;
        iArr3[117] = 1001;
        iArr3[118] = 461;
        iArr3[119] = 456;
        iArr3[120] = 459;
        iArr3[121] = 465;
        iArr3[122] = 471;
        iArr3[123] = 479;
        iArr3[124] = 975;
        iArr3[125] = 992;
        iArr3[126] = 1007;
        iArr3[127] = 2022;
        iArr3[128] = 2040;
        iArr3[129] = 4090;
        iArr3[130] = 1003;
        iArr3[131] = 477;
        iArr3[132] = 467;
        iArr3[133] = 473;
        iArr3[134] = 475;
        iArr3[135] = 978;
        iArr3[136] = 972;
        iArr3[137] = 988;
        iArr3[138] = 1002;
        iArr3[139] = 2029;
        iArr3[140] = 2035;
        iArr3[141] = 2041;
        iArr3[142] = 4089;
        iArr3[143] = 2034;
        iArr3[144] = 974;
        iArr3[145] = 484;
        iArr3[146] = 971;
        iArr3[147] = 984;
        iArr3[148] = 982;
        iArr3[149] = 994;
        iArr3[150] = 997;
        iArr3[151] = 2024;
        iArr3[152] = 2036;
        iArr3[153] = 2037;
        iArr3[154] = 2039;
        iArr3[155] = 4091;
        iArr3[156] = 2042;
        iArr3[157] = 1004;
        iArr3[158] = 991;
        iArr3[159] = 993;
        iArr3[160] = 996;
        iArr3[161] = 998;
        iArr3[162] = 1008;
        iArr3[163] = 2025;
        iArr3[164] = 2031;
        iArr3[165] = 4088;
        iArr3[166] = 4094;
        iArr3[167] = 4092;
        iArr3[168] = 4095;
        codes10 = iArr3;
        int[] iArr4 = new int[C13959t.f40788F2];
        // fill-array-data instruction
        iArr4[0] = 6;
        iArr4[1] = 5;
        iArr4[2] = 6;
        iArr4[3] = 6;
        iArr4[4] = 7;
        iArr4[5] = 8;
        iArr4[6] = 9;
        iArr4[7] = 10;
        iArr4[8] = 10;
        iArr4[9] = 10;
        iArr4[10] = 11;
        iArr4[11] = 11;
        iArr4[12] = 12;
        iArr4[13] = 5;
        iArr4[14] = 4;
        iArr4[15] = 4;
        iArr4[16] = 5;
        iArr4[17] = 6;
        iArr4[18] = 7;
        iArr4[19] = 7;
        iArr4[20] = 8;
        iArr4[21] = 8;
        iArr4[22] = 9;
        iArr4[23] = 10;
        iArr4[24] = 10;
        iArr4[25] = 11;
        iArr4[26] = 6;
        iArr4[27] = 4;
        iArr4[28] = 5;
        iArr4[29] = 5;
        iArr4[30] = 6;
        iArr4[31] = 6;
        iArr4[32] = 7;
        iArr4[33] = 8;
        iArr4[34] = 8;
        iArr4[35] = 9;
        iArr4[36] = 9;
        iArr4[37] = 10;
        iArr4[38] = 10;
        iArr4[39] = 6;
        iArr4[40] = 5;
        iArr4[41] = 5;
        iArr4[42] = 5;
        iArr4[43] = 6;
        iArr4[44] = 7;
        iArr4[45] = 7;
        iArr4[46] = 8;
        iArr4[47] = 8;
        iArr4[48] = 9;
        iArr4[49] = 9;
        iArr4[50] = 10;
        iArr4[51] = 10;
        iArr4[52] = 7;
        iArr4[53] = 6;
        iArr4[54] = 6;
        iArr4[55] = 6;
        iArr4[56] = 6;
        iArr4[57] = 7;
        iArr4[58] = 7;
        iArr4[59] = 8;
        iArr4[60] = 8;
        iArr4[61] = 9;
        iArr4[62] = 9;
        iArr4[63] = 10;
        iArr4[64] = 10;
        iArr4[65] = 8;
        iArr4[66] = 7;
        iArr4[67] = 6;
        iArr4[68] = 7;
        iArr4[69] = 7;
        iArr4[70] = 7;
        iArr4[71] = 8;
        iArr4[72] = 8;
        iArr4[73] = 8;
        iArr4[74] = 9;
        iArr4[75] = 10;
        iArr4[76] = 10;
        iArr4[77] = 11;
        iArr4[78] = 9;
        iArr4[79] = 7;
        iArr4[80] = 7;
        iArr4[81] = 7;
        iArr4[82] = 7;
        iArr4[83] = 8;
        iArr4[84] = 8;
        iArr4[85] = 9;
        iArr4[86] = 9;
        iArr4[87] = 9;
        iArr4[88] = 10;
        iArr4[89] = 10;
        iArr4[90] = 11;
        iArr4[91] = 9;
        iArr4[92] = 8;
        iArr4[93] = 8;
        iArr4[94] = 8;
        iArr4[95] = 8;
        iArr4[96] = 8;
        iArr4[97] = 9;
        iArr4[98] = 9;
        iArr4[99] = 9;
        iArr4[100] = 10;
        iArr4[101] = 10;
        iArr4[102] = 11;
        iArr4[103] = 11;
        iArr4[104] = 9;
        iArr4[105] = 8;
        iArr4[106] = 8;
        iArr4[107] = 8;
        iArr4[108] = 8;
        iArr4[109] = 8;
        iArr4[110] = 9;
        iArr4[111] = 9;
        iArr4[112] = 10;
        iArr4[113] = 10;
        iArr4[114] = 10;
        iArr4[115] = 11;
        iArr4[116] = 11;
        iArr4[117] = 10;
        iArr4[118] = 9;
        iArr4[119] = 9;
        iArr4[120] = 9;
        iArr4[121] = 9;
        iArr4[122] = 9;
        iArr4[123] = 9;
        iArr4[124] = 10;
        iArr4[125] = 10;
        iArr4[126] = 10;
        iArr4[127] = 11;
        iArr4[128] = 11;
        iArr4[129] = 12;
        iArr4[130] = 10;
        iArr4[131] = 9;
        iArr4[132] = 9;
        iArr4[133] = 9;
        iArr4[134] = 9;
        iArr4[135] = 10;
        iArr4[136] = 10;
        iArr4[137] = 10;
        iArr4[138] = 10;
        iArr4[139] = 11;
        iArr4[140] = 11;
        iArr4[141] = 11;
        iArr4[142] = 12;
        iArr4[143] = 11;
        iArr4[144] = 10;
        iArr4[145] = 9;
        iArr4[146] = 10;
        iArr4[147] = 10;
        iArr4[148] = 10;
        iArr4[149] = 10;
        iArr4[150] = 10;
        iArr4[151] = 11;
        iArr4[152] = 11;
        iArr4[153] = 11;
        iArr4[154] = 11;
        iArr4[155] = 12;
        iArr4[156] = 11;
        iArr4[157] = 10;
        iArr4[158] = 10;
        iArr4[159] = 10;
        iArr4[160] = 10;
        iArr4[161] = 10;
        iArr4[162] = 10;
        iArr4[163] = 11;
        iArr4[164] = 11;
        iArr4[165] = 12;
        iArr4[166] = 12;
        iArr4[167] = 12;
        iArr4[168] = 12;
        bits10 = iArr4;
        int[] iArr5 = swb_offset_1024_96;
        int[] iArr6 = swb_offset_1024_48;
        int[] iArr7 = swb_offset_1024_24;
        int[] iArr8 = swb_offset_1024_16;
        int[] iArr9 = swb_offset_1024_8;
        ff_swb_offset_1024 = new int[][]{iArr5, iArr5, swb_offset_1024_64, iArr6, iArr6, swb_offset_1024_32, iArr7, iArr7, iArr8, iArr8, iArr8, iArr9, iArr9};
        int[] iArr10 = swb_offset_128_96;
        int[] iArr11 = swb_offset_128_48;
        int[] iArr12 = swb_offset_128_24;
        int[] iArr13 = swb_offset_128_16;
        int[] iArr14 = swb_offset_128_8;
        ff_swb_offset_128 = new int[][]{iArr10, iArr10, iArr10, iArr11, iArr11, iArr11, iArr12, iArr12, iArr13, iArr13, iArr13, iArr14, iArr14};
        int[] iArr15 = new int[C13959t.f40788F2];
        // fill-array-data instruction
        iArr15[0] = 0;
        iArr15[1] = 272;
        iArr15[2] = 288;
        iArr15[3] = 304;
        iArr15[4] = 320;
        iArr15[5] = 336;
        iArr15[6] = 352;
        iArr15[7] = 368;
        iArr15[8] = 384;
        iArr15[9] = 400;
        iArr15[10] = 416;
        iArr15[11] = 432;
        iArr15[12] = 448;
        iArr15[13] = 4353;
        iArr15[14] = 529;
        iArr15[15] = 545;
        iArr15[16] = 561;
        iArr15[17] = 577;
        iArr15[18] = 593;
        iArr15[19] = 609;
        iArr15[20] = 625;
        iArr15[21] = 641;
        iArr15[22] = 657;
        iArr15[23] = 673;
        iArr15[24] = 689;
        iArr15[25] = 705;
        iArr15[26] = 4354;
        iArr15[27] = 530;
        iArr15[28] = 546;
        iArr15[29] = 562;
        iArr15[30] = 578;
        iArr15[31] = 594;
        iArr15[32] = 610;
        iArr15[33] = 626;
        iArr15[34] = 642;
        iArr15[35] = 658;
        iArr15[36] = 674;
        iArr15[37] = 690;
        iArr15[38] = 706;
        iArr15[39] = 4355;
        iArr15[40] = 531;
        iArr15[41] = 547;
        iArr15[42] = 563;
        iArr15[43] = 579;
        iArr15[44] = 595;
        iArr15[45] = 611;
        iArr15[46] = 627;
        iArr15[47] = 643;
        iArr15[48] = 659;
        iArr15[49] = 675;
        iArr15[50] = 691;
        iArr15[51] = 707;
        iArr15[52] = 4356;
        iArr15[53] = 532;
        iArr15[54] = 548;
        iArr15[55] = 564;
        iArr15[56] = 580;
        iArr15[57] = 596;
        iArr15[58] = 612;
        iArr15[59] = 628;
        iArr15[60] = 644;
        iArr15[61] = 660;
        iArr15[62] = 676;
        iArr15[63] = 692;
        iArr15[64] = 708;
        iArr15[65] = 4357;
        iArr15[66] = 533;
        iArr15[67] = 549;
        iArr15[68] = 565;
        iArr15[69] = 581;
        iArr15[70] = 597;
        iArr15[71] = 613;
        iArr15[72] = 629;
        iArr15[73] = 645;
        iArr15[74] = 661;
        iArr15[75] = 677;
        iArr15[76] = 693;
        iArr15[77] = 709;
        iArr15[78] = 4358;
        iArr15[79] = 534;
        iArr15[80] = 550;
        iArr15[81] = 566;
        iArr15[82] = 582;
        iArr15[83] = 598;
        iArr15[84] = 614;
        iArr15[85] = 630;
        iArr15[86] = 646;
        iArr15[87] = 662;
        iArr15[88] = 678;
        iArr15[89] = 694;
        iArr15[90] = 710;
        iArr15[91] = 4359;
        iArr15[92] = 535;
        iArr15[93] = 551;
        iArr15[94] = 567;
        iArr15[95] = 583;
        iArr15[96] = 599;
        iArr15[97] = 615;
        iArr15[98] = 631;
        iArr15[99] = 647;
        iArr15[100] = 663;
        iArr15[101] = 679;
        iArr15[102] = 695;
        iArr15[103] = 711;
        iArr15[104] = 4360;
        iArr15[105] = 536;
        iArr15[106] = 552;
        iArr15[107] = 568;
        iArr15[108] = 584;
        iArr15[109] = 600;
        iArr15[110] = 616;
        iArr15[111] = 632;
        iArr15[112] = 648;
        iArr15[113] = 664;
        iArr15[114] = 680;
        iArr15[115] = 696;
        iArr15[116] = 712;
        iArr15[117] = 4361;
        iArr15[118] = 537;
        iArr15[119] = 553;
        iArr15[120] = 569;
        iArr15[121] = 585;
        iArr15[122] = 601;
        iArr15[123] = 617;
        iArr15[124] = 633;
        iArr15[125] = 649;
        iArr15[126] = 665;
        iArr15[127] = 681;
        iArr15[128] = 697;
        iArr15[129] = 713;
        iArr15[130] = 4362;
        iArr15[131] = 538;
        iArr15[132] = 554;
        iArr15[133] = 570;
        iArr15[134] = 586;
        iArr15[135] = 602;
        iArr15[136] = 618;
        iArr15[137] = 634;
        iArr15[138] = 650;
        iArr15[139] = 666;
        iArr15[140] = 682;
        iArr15[141] = 698;
        iArr15[142] = 714;
        iArr15[143] = 4363;
        iArr15[144] = 539;
        iArr15[145] = 555;
        iArr15[146] = 571;
        iArr15[147] = 587;
        iArr15[148] = 603;
        iArr15[149] = 619;
        iArr15[150] = 635;
        iArr15[151] = 651;
        iArr15[152] = 667;
        iArr15[153] = 683;
        iArr15[154] = 699;
        iArr15[155] = 715;
        iArr15[156] = 4364;
        iArr15[157] = 540;
        iArr15[158] = 556;
        iArr15[159] = 572;
        iArr15[160] = 588;
        iArr15[161] = 604;
        iArr15[162] = 620;
        iArr15[163] = 636;
        iArr15[164] = 652;
        iArr15[165] = 668;
        iArr15[166] = 684;
        iArr15[167] = 700;
        iArr15[168] = 716;
        codebook_vector8_idx = iArr15;
    }
}
